---
import Layout from '../layouts/Layout.astro';
import Button from '../components/Button.astro';
import Hero from '../components/Hero.astro';
import ExtendedFab from '../components/ExtendedFab.astro';
import Chip from '../components/Chip.astro';
import { Icon } from 'astro-icon/components';

import { getCollection } from 'astro:content';
import AssetsImage from '../components/AssetsImage.astro';
import Carousel from '../components/Carousel.astro';

export async function getStaticPaths() {
  const ports = await getCollection('port');
  return ports.map((port) => {
    return {
      params: { port: port.slug },
      props: { port },
    };
  });
}
const { port } = Astro.props;
const { title, images, assets } = port.data;
const meta = {
  title: `Wildberries theme for ${title}`,
  description: `A dark purple colorscheme for ${title} and many other apps`,
  image: `/api/og/${port.slug}.png`,
};
const { Content } = await port.render();
---

<Layout meta={meta} port={title}>
  <Hero cta={{ text: 'Apply Theme', href: '#instructions', icon: 'material-symbols:brush' }} ,>
    <div slot="title" class="w-max text-3xl md:text-5xl text-pink">
      <h1>Wildberries</h1>
    </div>
    <span slot="subtitle">A dark purple theme for <Chip value={title} variant="secondary" /> and many other apps</span>
    {
      images &&
        (images.length > 1 ? (
          <Carousel>
            {images.map((image) => (
              <AssetsImage class="w-full h-full object-contain" imagePath={image} altText="" />
            ))}
          </Carousel>
        ) : (
          <AssetsImage class="w-full h-full object-contain" imagePath={images[0]} altText="" />
        ))
    }
  </Hero>
  <div id="instructions" class="mx-auto max-w-4xl px-4 pb-4 text-[#D1D5DB] lg:text-xl">
    <div class="mx-auto my-8 flex max-w-4xl items-center justify-center gap-4 text-2xl text-light-purple">
      <Icon class="h-10 w-10 p-1" name="material-symbols:brush" />
      <p>Instalation</p>
    </div>

    <div
      class="sm:px-6 max-w-3xl
        prose prose-lg dark:prose-invert dark:prose-headings:text-slate-300 prose-md
      prose-p:text-darker-purple dark:prose-p:text-inherit
        prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold
      prose-a:text-grape dark:prose-a:text-[#399ee6]
        prose-img:rounded-md prose-img:shadow-lg mt-8
      marker:text-light-purple
      prose-code:text-light-purple prose-code:px-2 prose-code:py-1 prose-code:rounded-md"
    >
      <Content />
    </div>
    {
      assets &&
        assets.map((asset: string) => {
          return (
            <div>
              <p class="m-auto w-fit rounded-t-lg bg-darker-purple p-4 text-light-purple">{asset}</p>
              <Button href={`/ports/${asset}`} icon="tabler:download">
                Download
              </Button>
            </div>
          );
        })
    }
  </div>
  <ExtendedFab href="/" icon="bx:brush" variant="secondary"> Check all ports </ExtendedFab>
</Layout>
