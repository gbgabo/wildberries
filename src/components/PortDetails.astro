---
import { Icon } from 'astro-icon/components';
import Chip from './Chip.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  port: CollectionEntry<'port'>;
}

const { port } = Astro.props as Props;
const { assets, platforms, contributors } = port.data;
---
<div
  data-filter
  class="z-40 hidden animate-fade-up rounded-lg border-2 p-5 shadow-md border-cherry bg-darker-purple md:block"
>
  <div class="mb-3">
    <p class="text-muted z-10 pb-3 font-semibold text-light-purple">Details:</p>
    <ul class="text-muted-purple">
        <li class="mb-4">
            <p class="flex items-center gap-1 flex-wrap">
                <span class="flex items-center gap-2">
                    <Icon name="material-symbols:stack"/>Platforms: 
                </span>
                { platforms.map((p) => <Chip value={p} variant="secondary" />)}
            </p>
        </li>
        <li class="mb-4">
            <a class="flex items-center gap-2 py-1" href="https://github.com/gbgabo/wildberries/issues/new/choose">
                <Icon name="material-symbols:bug-report"/>Report an issue
            </a>
        </li>
        <li class="mb-4">
            <a class="flex items-center gap-2 py-1" href={`https://github.com/gbgabo/wildberries/edit/main/src/content/port/${port.slug}.md`}>
                <Icon name="material-symbols:edit-square-outline"/>Edit this page
            </a>
        </li>
    </ul>
  </div>
  {
    assets && (
        <div class="mb-3">
            <p class="text-muted z-10 pb-3 font-semibold text-light-purple">Assets:</p>
            <ul class="text-muted-purple">
                { 
                    assets.map((a) => <li><Chip value={a} href={`/ports/${a}`} /></li>)
                }
            </ul>
        </div>
    )
  }
  {
    contributors && (
        <div>
            <p class="text-muted z-10 pb-3 font-semibold text-light-purple">Contributors:</p>
            <ul class="text-muted-purple">
                { 
                    contributors.map((c) => 
                        <li>
                            <a class="flex items-center gap-2 py-1" href={`https://github.com/${c}`}>
                                <img class="inline h-full w-6 rounded-full" src="https://avatars.githubusercontent.com/u/749751?v=4" alt={`${c} user profile`}>
                                {c}
                            </a>
                        </li>
                    )
                }
            </ul>
        </div>
    )
  }
</div>

<button
  class="fixed bottom-20 right-3 rounded-2xl p-3 shadow-md bg-cherry text-acid-green md:hidden"
  data-toggle-filter
  aria-label="Post filter"
>
    <Icon name="material-symbols:info-rounded"/>
</button>

<script>
function attachEvent(selector: any, event: any, fn: Function) {
    const matches = typeof selector === 'string' ? document.querySelectorAll(selector) : selector;
    if (matches && matches.length) {
        matches.forEach((elem: HTMLElement) => {
            elem.addEventListener(event, (e) => fn(e, elem), false);
        });
    }
}

const drawerSlide = (toggle: any, element: any) => {
    attachEvent(toggle, 'click', function (e: Event, elem: HTMLElement) {
        elem.classList.toggle('expanded');
        document.querySelector(element)?.classList.toggle('hidden');
        e.stopPropagation();
    });

    attachEvent([document], 'click', function (e: Event) {
        if ((e.target as HTMLElement).closest(element)) return;

        document.querySelector(toggle)?.classList.remove('expanded');
        document.querySelector(element)?.classList.add('hidden');
    });
};

window.onload = function () {
    // Table of content (TOC) toggling
    drawerSlide('[data-toggle-filter]', '[data-filter]');
}
</script>